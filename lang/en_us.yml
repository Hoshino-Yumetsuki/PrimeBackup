prime_backup:
  command:
    help:
      no_help: No detailed help message for command {}
    confirm:
      noop: Nothing to confirm
    abort:
      noop: Nothing to abort

  task:
    clear_tag:
      name: set backup tag
      cleared: Cleared tag {1} of backup {0}
      not_exists: Backup {0} does not have tag {1}
    create:
      name: create backup
      start: Creating backup, please wait
      abort.save_wait_time_out: Waiting for the world to save timed out, aborting backup task
      abort.unloaded: Plugin unloaded, backup task aborted
      completed: 'Backup completed, ID {}, cost {}, total {} (+{})'
      cost.hover: |-
        save wait: {}
        create backup: {}
    crontab_operate:
      name: operate crontab
      pause.already: Crontab job "{}" is already paused
      pause.done: Crontab job "{}" paused until plugin reload
      pause.done.notes: If you want to disable it permanently, you need to modify related config
      resume.already: 'Crontab job "{}" is already running. Next run at: {}'
      resume.done: 'Crontab job "{}" resumed. Next run at: {}'
    crontab_show:
      name: show crontab
      title: Crontab job "{}"
      enabled: 'Enabled: {}'
      running: 'Running: {}'
      interval: 'Interval: {}'
      jitter: 'Jitter: {}'
      next_run_date: 'Next at: {}'
      quick_actions: 'Quick actions: {} {}'
      pause: pause
      pause.hover: Click to pause job "{}"
      resume: resume
      resume.hover: Click to resume job "{}"
    delete:
      name: delete backup
      protected: Backup {} is protected and cannot be deleted
      deleting: Deleting {}
      deleted: Deleted backup {}, freed {}
    delete_range:
      name: delete backup range
      no_backup: No available backup to delete
      to_delete_count: 'Found {} backups to be deleted:'
      ellipsis.hover: Omitted {} backups
      confirm_target: delete
      no_confirm: No choice has been made, delete task aborted
      aborted: Delete task aborted
      deleted: Deleted {}
      deleted.skipped: Skipped {} (missed)
      done: Done, {} backups deleted, freed {}
    export:
      name: export backup
      already_exists: File {} already exists
      exporting: Exporting backup {}
      exported: Exported backup {} to {}, cost {}, size {}
    help:
      name: show help
      help:
        # TODO: refactor, one usage one line, only show common commands in welcome page
        _header: |-
          ------ {name} v{version} ------
          {description}
        .: |-
          §d[Commands Usages]§r
          §7{prefix}§r: Display help message
          §7{prefix} help §e[<what>]§r: Display help message of the given command
          §7{prefix} make §e[<comment>]§r: Make a backup. §e<comment>§r is an optional comment message
          §7{prefix} back §6[<backup_id>]§r: Restore the world to the given backup. Default: latest backup
          §7{prefix} list [...]§r: List backups with given filters. Enter §7{prefix} help list§r for detailed help
          §7{prefix} show §6<backup_id>§r: Show detailed information of the given backup
          §7{prefix} rename §6<backup_id>§r §e<comment>§r: Modify the comment of the given backup
          §7{prefix} delete §6<backup_id>§r: Delete the given backup
          §7{prefix} delete_range §6<backup_id_range>§r: Delete backups inside the given ID range
          §7{prefix} export §6<backup_id> §3[<export_format>]§r: Export the given backup to the §3export§r folder
          §7{prefix} prune §6<backup_id>§r: Manually trigger a backup prune
          §7{prefix} crontab §5<job_id> [pause|resume]§r: Show state or operate given crontab job
          §7{prefix} tag §6<backup_id> [set <value>|clear]§r§r: Tag operation on the given backup
          §7{prefix} database [overview|validate|vacuum]§r§r: Database queries and operations
          §7{prefix} confirm§r: Confirm the current task execution
          §7{prefix} abort§r: Abort the current task execution
          §d[Arguments]§r
          §6<backup_id>§r: A positive integer, the unique identifier for a backup, e.g.: §612§r
          §6<backup_id_range>§r: An integer closed interval, e.g.: §63-12§r, §64~9§r, §64~§r, §64~§r, §6*§r
          §3<export_format>§r: Available options: {export_formats}
          §5<job_id>§r: Available options: {job_ids}
        list: |-
          §d[List Command Usage]§r
          List backups with given filters
          §7{prefix} list [<page>] [--arg-key <arg-value>] §r
          §d[Optional arguments]§r
          §7--per-page §e<per_page>§r: Set number of backup displayed per page. Default: §e10§r
          §7--author §e<author>§r: Show backup created by the given author only
          §7--start §b<start_date>§r: Show backup after the given date only
          §7--end §b<end_date>§r: Show backup before the given date only
          §7--size§r: Show backup sizes
          §7--flags§r: Show backup flags, based on the tags of the backup
          §7--all§r: Show all backups. By default, hidden backups and pre-restore backups will not be shown
          §d[Examples]§r
          §7{prefix} list --all§r
          §7{prefix} list --start 20231130 --size§r
          §7{prefix} list 3 --per-page 20§r
    list:
      name: list backup
      title: Listing {} backups
      size: Size
      next: Next Page
      prev: Previous Page
      aborted: List task aborted
    prune:
      name: prune backups
      nothing_to_prune: No available backup to prune
      list_to_be_pruned: 'Backups to be pruned (amount={}): {}'
      prune: Deleting backup {}
      aborted: Prune task aborted
      done: Finished pruning, removed {} backups, {} blobs, freed {}
    prune_all:
      name: prune all backups
      nothing_to_do: No enabled prune job, no thing to do
      what:
        regular: regular backups
        pre_restore: pre-restore backups
      start: Start pruning {}
      done: Finished all prune jobs, removed {} backups, {} blobs, freed {}
    rename:
      name: rename backup
      modified: Modified the comment of backup {} to {}
    restore:
      name: restore backup
      no_backup: No available backup to restore
      show_backup: Gonna restore the world to {}
      confirm_target: restore
      countdown: '§c!!!§r {} second later, the world will §cbe restored§r to {}'
      countdown.hover: Click me or enter command {} to abort restore
      no_confirm: No choice has been made, restore task aborted
      pre_restore_comment: 'Automatic backup before restoring to #{}'
      aborted: Restore task aborted
    set_tag:
      name: set backup tag
      set: Set tag {1} of backup {0} to {2}
    show:
      name: show backup
      title: 'Backup {}'
      date: 'Creation date: {}'
      comment: 'Comment: {}'
      stored_size: 'Size (stored): {} ({})'
      raw_size: 'Size (raw): {}'
      author: 'Author: {}'
      author.hover: 'Click to list backups created by {}'
      tag.title: 'Tags (size={}):'
      tag.empty_title: 'Tags: {}'
      tag.empty: empty
    show_tag:
      name: show backup tags
      title: Tags of backup {}
      amount: 'Amount: {}'
      create: Click to create tag {}
      edit: Click to edit tag {}
      clear: Click to clear tag {}
      not_exists: not exists
    show_tag_single:
      name: show backup single tag
      value: Tag {1} of backup {0} is {2}
      not_exists: Backup {0} does not have tag {1}
    db_overview:
      name: overview database
      title: Database overview
      db_version: 'Database version: {}'
      hash_method: 'Hash method: {}'
      backup_cnt: 'Backup count: {}'
      file_cnt: 'File count: {}'
      file_raw_size: 'File raw size sum: {}'
      blob_cnt: 'Blob count: {}'
      blob_stored_size: 'Blob stored size sum: {} ({})'
      blob_raw_size: 'Blob raw size sum: {}'
    db_vacuum:
      name: tidy up database
      start: Compacting database, please wait...
      done: 'Database compaction complete, cost {}, size change: {} -> {} ({}) ({})'
    db_validate:
      name: validate database
      nothing_to_validate: Nothing is requested to be validated
      validate_blobs:
        .: Start validating blobs, please wait...
        done: Validated {} / {} blobs
        all_ok: All {} blobs are healthy
        found_bad_blobs: Found {} / {} bad blobs in total
        invalid: 'Invalid blob amount: {}'
        missing: 'Missing blob amount: {}'
        corrupted: 'Corrupted blob amount: {}'
        mismatched: 'Mismatched blob amount: {}'
      validate_files:
        .: Start validating files (including file, directory and symlink), please wait...
        done: Validated {} / {} files
        all_ok: All {} files are healthy
        found_bad_files: Found {} / {} bad files in total
        invalid: 'Invalid blob amount: {}'
        bad_blob_relation: 'Bad blob relationship: {}'
        file_blob_mismatched: 'File-blob mismatch: {}'
      done: Validation done, cost {}

  job:
    base:
      found_ongoing:
        skip: Found ongoing task, task execution skipped
        wait_retry: Found ongoing task, retry in {}
      completed: '{} completed, next execution at {}'
      completed_with_error: '{} completed with error, next execution at {}'
      next_run_date_paused: Paused
    create_db_backup:
      name: create database backup
    prune_backup:
      name: prune backup
    schedule_backup:
      name: schedule backup
      comment: Scheduled Backup
      triggered: Scheduled backup for every {} triggered
      reset_on_backup: Detected backup, reset scheduler timer. Next backup at {}
    vacuum_sqlite:
      name: compact database

  error:
    node:
      bad_date: Bad input date
      bad_id_range: Bad ID Range
    disabled: Plugin disabled
    permission_denied: Permission denied
    backup_not_found: Backup with ID {} does not exist
    db_locked: Task {} execution error cuz the database is locked. Please retry later
    generic: Task {} execution error, see console for more error
    too_much_ongoing_task:
      exclusive: 'Please wait for the ongoing task "{}" to finish'
      try_abort: You can also abort the ongoing task
      try_abort.hover: Click me or enter command {} to abort the ongoing task
      generic: 'Too many pending tasks (maximum = {}), please wait for some to finish'

  text_components:
    backup_brief: 'backup {}: {}'
    backup_comment.none: no comment
    backup_full:
      author: 'Author: {}'
      restore: Restore to backup {}
      delete: Delete backup {}
    backup_id.hover: |-
      Backup ID: {}
      Click to show details
    command:
      run: 'Click to run {}'
      suggest: 'Click to complete {}'
    confirm_hint:
      base: 'Please choose within {}: [{}], [{}]'
      confirm: Confirm {}
      confirm.hover: Click me or enter command {} to confirm {}
      abort: Abort {}
      abort.hover: Click me or enter command {} to abort {}
    date:
      ago: '{} ago'
      later: '{} later'
    dual_size_hover: |-
      Stored size: {} ({})
      Raw size: {}
    duration:
      text: '{} {}'
      s: second{}
      m: minute{}
      h: hour{}
      d: day{}
      plural_suffix: s
    operator:
      player: Player {}
      console: Console
      command_source: Command source {}
      unknown: '(Unknown) {}'
      prime_backup:
        .: Prime Backup
        test: Test
        scheduled_backup: Scheduled backup
        pre_restore: Automatic backup before restore

  backup_tag:
    hidden: Hidden backup
    pre_restore_backup: Backup before restore
    protected: Protected backup
