prime_backup:
  command:
    help:
      no_help: No detailed help message for command {}
    confirm:
      noop: Nothing to confirm
    abort:
      noop: Nothing to abort

  task:
    backup_clear_tag:
      name: set backup tag
      cleared: Cleared tag {1} of backup {0}
      not_exists: Backup {0} does not have tag {1}
    backup_create:
      name: create backup
      start: Creating backup, please wait
      abort.save_wait_time_out: Waiting for the world to save timed out, aborting backup task
      abort.unloaded: Plugin unloaded, backup task aborted
      completed: 'Backup completed, ID {}, cost {}, total {} (+{})'
      cost.hover: |-
        save wait: {}
        create backup: {}
    backup_delete:
      name: delete backup
      multi_delete: 'Multiple backups will be deleted (amount={}): {}'
      protected: Backup {} is protected and cannot be deleted
      deleting: Deleting {}
      deleted: Deleted backup {}, freed {}
    backup_delete_range:
      name: delete backup range
      no_backup: No available backup to delete
      to_delete_count: 'Found {} backups to be deleted:'
      ellipsis.hover: Omitted {} backups
      confirm_target: delete
      no_confirm: No choice has been made, delete task aborted
      aborted: Delete task aborted
      deleted: Deleted {}
      deleted.skipped: Skipped {} (missed)
      done: Done, {} backups deleted, freed {}
    backup_export:
      name: export backup
      already_exists: File {} already exists
      exporting: Exporting backup {}
      exported: Exported backup {} to {}, cost {}, size {}
      failures: 'Found {} errors during the export:'
    backup_list:
      name: list backup
      title: Backup list
      backup_count: 'There are {} backups:'
      size: Size
      next: Next Page
      prev: Previous Page
      aborted: List task aborted
    backup_prune:
      name: prune backups
      nothing_to_prune: No available backup to prune
      list_to_be_pruned: 'Backups to be pruned (amount={}): {}'
      prune: Deleting backup {}
      aborted: Prune task aborted
      done: Finished pruning, removed {} backups, {} blobs, freed {}
    backup_prune_all:
      name: prune all backups
      nothing_to_do: No enabled prune job, no thing to do
      what:
        regular: regular backups
        pre_restore: pre-restore backups
      start: Start pruning {}
      done: Finished all prune jobs, removed {} backups, {} blobs, freed {}
    backup_rename:
      name: rename backup
      modified: Modified the comment of backup {} to {}
    backup_restore:
      name: restore backup
      no_backup: No available backup to restore
      show_backup: Gonna restore the world to {}
      confirm_target: restore
      countdown: '{} second later, the world will §cbe restored§r to {}'
      countdown.hover: Click me or enter command {} to abort restore
      no_confirm: No choice has been made, restore task aborted
      pre_restore_comment: 'Automatic backup before restoring to #{}'
      aborted: Restore task aborted
    backup_set_tag:
      name: set backup tag
      set: Set tag {1} of backup {0} to {2}
    backup_show:
      name: show backup
      title: 'Backup {}'
      date: 'Creation date: {}'
      comment: 'Comment: {}'
      stored_size: 'Size (stored): {} ({})'
      raw_size: 'Size (raw): {}'
      creator: 'Creator: {}'
      creator.hover: 'Click to list backups created by {}'
      tag.title: 'Tags (size={}):'
      tag.empty_title: 'Tags: {}'
      tag.empty: empty
    backup_show_tag:
      name: show backup tags
      title: Tags of backup {}
      amount: 'Tag amount: {}'
      value_type: 'Value type: {}'
      create: Click to create tag {}
      edit: Click to edit tag {}
      clear: Click to clear tag {}
      not_exists: not exists
    backup_show_tag_single:
      name: show backup single tag
      value: Tag {1} of backup {0} is {2}
      not_exists: Backup {0} does not have tag {1}
    crontab_list_job:
      name: list crontab
      title: Crontab job list
      enabled: Enabled
      disabled: Disabled
      running: Running
      paused: Paused
      line.running: '{} {}, next: {} ({})'
      line.paused: '{} {}'
    crontab_operate:
      name: operate crontab
      pause.already: Crontab job "{}" is already paused
      pause.done: Crontab job "{}" paused until plugin reload
      pause.done.notes: If you want to disable it permanently, you need to modify related config
      resume.already: 'Crontab job "{}" is already running. Next run at: {}'
      resume.done: 'Crontab job "{}" resumed. Next run at: {}'
    crontab_show:
      name: show crontab
      title: Crontab job "{}"
      enabled: 'Enabled: {}'
      running: 'Running: {}'
      interval: 'Interval: {}'
      crontab: 'Crontab: {}'
      jitter: 'Jitter: {}'
      next_run_date: 'Next at: {}'
      quick_actions: 'Quick actions: {}'
      pause: pause
      pause.hover: Click to pause job "{}"
      resume: resume
      resume.hover: Click to resume job "{}"
    db_overview:
      name: overview database
      title: Database overview
      db_version: 'Database version: {}'
      hash_method: 'Hash method: {}'
      backup_cnt: 'Backup count: {}'
      file_cnt: 'File count: {}'
      file_raw_size: 'File raw size sum: {}'
      blob_cnt: 'Blob count: {}'
      blob_stored_size: 'Blob stored size sum: {} ({})'
      blob_raw_size: 'Blob raw size sum: {}'
    db_vacuum:
      name: tidy up database
      start: Compacting database, please wait...
      done: 'Database compaction complete, cost {}, size change: {} -> {} ({}) ({})'
    db_validate:
      name: validate database
      nothing_to_validate: Nothing is requested to be validated
      validate_blobs:
        .: Start validating blobs, please wait...
        done: Validated {} / {} blobs
        all_ok: All {} blobs are healthy
        found_bad_blobs: Found {} / {} bad blobs in total
        invalid: 'Invalid blob amount: {}'
        missing: 'Missing blob amount: {}'
        corrupted: 'Corrupted blob amount: {}'
        mismatched: 'Mismatched blob amount: {}'
        orphan: 'Orphan blob amount: {}'
        affected: 'Affected range: {} files, {} backups'
      validate_files:
        .: Start validating files (including file, directory and symlink), please wait...
        done: Validated {} / {} files
        all_ok: All {} files are healthy
        found_bad_files: Found {} / {} bad files in total
        invalid: 'Invalid blob amount: {}'
        bad_blob_relation: 'Bad blob relationship: {}'
        file_blob_mismatched: 'File-blob mismatch: {}'
      done: Validation done, cost {}
    help:
      name: show help
      commands:
        title: '[Commands Usages]'
        content: |-
          §7{prefix}§r: Display the current welcome page
          §7{prefix} help §e[<what>]§r: Display help message of all / given command
          §7{prefix} make §e[<comment>]§r: Make a backup. §e<comment>§r is an optional comment message
          §7{prefix} back §6[<backup_id>]§r: Restore to the given backup. See §7{prefix} help back§r for detailed help 
          §7{prefix} list [...]§r: List backups with given filters. See §7{prefix} help list§r for detailed help
          §7{prefix} show §6<backup_id>§r: Show detailed information of the given backup
          §7{prefix} rename §6<backup_id>§r §e<comment>§r: Modify the comment of the given backup
          §7{prefix} delete §6<backup_id> [<backup_id>...]§r: Delete the given backup. You can enter multiple backup IDs
          §7{prefix} delete_range §6<backup_id_range>§r: Delete backups inside the given ID range
          §7{prefix} export §6<backup_id> §7[...]§r: Export the given backup. See §7{prefix} help export§r for detailed help
          §7{prefix} prune §6<backup_id>§r: Manually trigger a backup prune
          §7{prefix} crontab §a<job_id> §7[...]§r: Crontab job operations. See §7{prefix} help crontab§r for help
          §7{prefix} tag §6<backup_id> §7[...]§r: Tag operation on the given backup
          §7{prefix} database [...]§r: Database operations. See §7{prefix} help database§r for help
          §7{prefix} confirm§r: Confirm the current task execution
          §7{prefix} abort§r: Abort the current task execution
      arguments:
        title: '[Arguments]'
        content: |-
          §6<backup_id>§r: A positive integer, the unique ID for a backup, e.g.: §612§r
          §6<backup_id_range>§r: An integer closed interval, e.g.: §63-12§r, §64~9§r, §64~§r, §64~§r, §6*§r
      other:
        title: '[Others]'
        nodes_with_help: 'Subcommands with detailed help: {}'
        docs: 'Documentation: {}'
        docs.hover: Click to open the url
      node_help:
        back: |-
          §d[back Command Usage]§r
          Restore the world to the given backup
          §7{prefix} back §6[<backup_id>] §7[--flags]§r
          §d[Arguments]§r
          §3<backup_id>§r: The ID of the backup to restore. If not specified, the latest not pre-restore backup will be used
          §d[Optional flags]§r
          §7--confirm§r: Skip the confirm step and start the restore directly
          §7--fail-soft§r: Skip files with export failure in the backup, so a single failure will not abort the export
          §7--no-verify§r: Do not verify the exported file contents
        crontab: |-
          §d[crontab Command Usage]§r
          Operate crontab jobs
          §d[Usages]§r
          §7{prefix}§r: Show all currently enabled crontab jobs
          §7{prefix} §a<job_id>§r: Show status of the given crontab job
          §7{prefix} §a<job_id> §7pause§r: Temporarily pause the given job. The job will still start on next plugin load
          §7{prefix} §a<job_id> §7resume§r: Cancel the pause state of the given job, resume its run
          §d[Arguments]§r
          §a<job_id>§r: Available options: {job_ids}
        database: |-
          §d[database Command Usage]§r
          Operate the core SQLite database of {name}
          §d[Usages]§r
          §7{prefix} database overview§r: Report an overview of the database
          §7{prefix} database validate §a<part>§r: Validate the correctness of contents in the database. Might take a long time
          §7{prefix} database vacuum§r: Compact the SQLite database manually, to reduce the size of the database file
          {scheduled_compact_notes}
          §d[Arguments]§r
          §a<part>§r: 
          - §ablobs§r: Validate the correctness of blobs, e.g. data size, hash value
          - §afiles§r: Validate the correctness of file objects, e.g. the association between files and blobs
          - §aall§r: Validate all of the above
        database.scheduled_compact.on: 'Notes: With the current config, {name} will automatically prune the database. See {cmd}'
        database.scheduled_compact.off: 'Notes: With the current config, scheduled database prune is disabled'
        export: |-
          §d[export Command Usage]§r
          Export the given backup to the §3export§r folder
          §7{prefix} export §6<backup_id> §3[<export_format>] §7[--flags]§r
          §d[Arguments]§r
          §3<export_format>§r: Available options: {export_formats}. Use §3tar§r format if not specified
          §d[Optional flags]§r
          §7--overwrite§r: Overwrites existing exported backup. By default, no export will be made if the output file exists
          §7--fail-soft§r: Skip files with export failure in the backup, so a single failure will not abort the export. Notes: a corrupted file might damaged the tar-based file 
          §7--no-verify§r: Do not verify the exported file contents
          §d[Examples]§r
          §7{prefix} export 12§r: Use the default §3tar§r format to export backup §612§r
          §7{prefix} export 12 tar_gz§r: Use the §tar_gz§r format to export backup §612§r
          §7{prefix} export 12 tar --fail-soft --no-verify§r: Export backup §612§r with best effort
        list: |-
          §d[list Command Usage]§r
          List backups with given filters
          §7{prefix} list [<page>] [--arg-key <arg-value>]§r
          §d[Optional arguments]§r
          §7--per-page §e<per_page>§r: Set number of backup displayed per page. Default: §e10§r
          §7--creator §e<creator>§r: Show backup created by the given creator only
          §7--start §b<start_date>§r: Show backup after the given date only
          §7--end §b<end_date>§r: Show backup before the given date only
          §7--all§r: Show all backups. By default, hidden backups and pre-restore backups will not be shown
          §7--flags§r: Show backup flags, based on the tags of the backup
          §d[Examples]§r
          §7{prefix} list --all --flags§r
          §7{prefix} list --start 20231130§r
          §7{prefix} list 3 --per-page 20§r
        tag: |-
          §d[tag Command Usage]§r
          Operate tags on the given backup
          §d[Usages]§r
          §7{prefix} tag §6<backup_id>§r: Show all the tags of the backup. All known tags will be listed, regardless of their existence
          §7{prefix} tag §6<backup_id> §b<tag_name>§r: Show the value of the given tag of the backup
          §7{prefix} tag §6<backup_id> §b<tag_name> §7set §e<tag_value>§r: Set the value of the given tag for the backup
          §7{prefix} tag §6<backup_id> §b<tag_name> §7clear§r: Clear the given tag of the backup
      permission_denied: You don't have the permission to see help message of subcommand {}
    welcome:
      title: '{name} {version}'
      common_commands: '[Common Commands]'
      common_commands.hover: 'Enter command {} to see the full command list'
      recent_backups: '[Latest {} Backups]'
      quick_actions:
        title: '[Quick Actions]'
        create: 'Create a new backup'
        create.comment: "I'm a comment"
        restore: 'restore to the latest backup'

  job:
    base:
      found_ongoing:
        unknown_task: unknown
        skip: 'Found ongoing task "{}", job {} execution skipped'
        wait_retry: 'Found ongoing task "{}", job {} will retry in {}'
      completed: '{} completed, next execution at {}'
      completed_with_error: '{} completed with error, next execution at {}'
      next_run_date_paused: Paused
    create_db_backup:
      name: create database backup
      name_titled: Create database backup
    prune_backup:
      name: prune backup
      name_titled: Prune database backup
    schedule_backup:
      name: schedule backup
      name_titled: Schedule backup
      triggered: '{0} for every {1} triggered'
      reset_on_backup: Detected new backup, timer reset. Next scheduled backup at {}
    vacuum_sqlite:
      name: compact database
      name_titled: Compact database

  error:
    backup_not_found: Backup with ID {} does not exist
    db_locked: Task {} execution error cuz the database is locked. Please retry later
    disabled: Plugin disabled
    generic: Task {} execution error, see console for more error
    missing_backup_id: Please supply the backup ID
    node:
      bad_date: Bad input date
      bad_id_range: Bad ID Range
    permission_denied: Permission denied
    too_much_ongoing_task:
      exclusive: 'Please wait for the ongoing task "{}" to finish'
      try_abort: You can also abort the ongoing task
      try_abort.hover: Click me or enter command {} to abort the ongoing task
      generic: 'Too many pending tasks (maximum = {}), please wait for some to finish'

  text_components:
    backup_brief: 'backup {}: {}'
    backup_comment:
      none: no comment
      scheduled_backup: Scheduled Backup
    backup_full:
      creator: 'Creator: {}'
      restore: Restore to backup {}
      delete: Delete backup {}
      protected: Backup {} is protected
    backup_id.hover: |-
      Backup ID: {}
      Click to show details
    command:
      run: 'Click to run {}'
      suggest: 'Click to complete {}'
    confirm_hint:
      base: 'Please choose within {}: [{}], [{}]'
      confirm: Confirm {}
      confirm.hover: Click me or enter command {} to confirm {}
      abort: Abort {}
      abort.hover: Click me or enter command {} to abort {}
    crontab:
      help_url: 'Crontab string explanation at: {}'
    date_diff:
      ago: '{} ago'
      later: '{} later'
    dual_size_hover: |-
      Stored size: {} ({})
      Raw size: {}
    duration:
      text: '{} {}'
      s: second{}
      m: minute{}
      h: hour{}
      d: day{}
      plural_suffix: s
    operator:
      player: Player {}
      console: Console
      command_source: Command source {}
      unknown: '(Unknown) {}'
      prime_backup:
        .: Prime Backup
        test: Test
        scheduled_backup: Scheduled backup
        pre_restore: Automatic backup before restore

  backup_tag:
    hidden: Hidden backup
    pre_restore_backup: Backup before restore
    protected: Protected backup
